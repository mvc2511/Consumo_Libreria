{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'https://localhost:7114/api/Autor'; // URL base de la API para interactuar con la entidad Autor\n\n// Función asincrónica para obtener la lista de autores\nexport const getAutores = async () => {\n  try {\n    const response = await axios.get(API_URL); // Realizar una solicitud GET para obtener la lista de autores\n    return response.data; // Devolver los datos de la respuesta\n  } catch (error) {\n    console.error('Error al obtener autores:', error); // Manejar errores en caso de fallo\n    throw error;\n  }\n};\n\n// Función asincrónica para obtener un autor por su ID\nexport const getAutorPorId = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/${id}`); // Realizar una solicitud GET para obtener un autor específico por su ID\n    return response.data; // Devolver los datos de la respuesta\n  } catch (error) {\n    console.error('Error al obtener autor por ID:', error); // Manejar errores en caso de fallo\n    throw error;\n  }\n};\n\n// Función asincrónica para agregar un nuevo autor\nexport const agregarAutor = async (nuevoAutor, imagen) => {\n  try {\n    const formData = new FormData(); // Crear un objeto FormData para enviar datos de formulario\n    formData.append('nombre', nuevoAutor.nombre); // Agregar el nombre del nuevo autor al formulario\n    formData.append('apellido', nuevoAutor.apellido); // Agregar el apellido del nuevo autor al formulario\n    formData.append('fechaNacimiento', nuevoAutor.fechaNacimiento); // Agregar la fecha de nacimiento del nuevo autor al formulario\n    formData.append('imagen', imagen); // Agregar la imagen del nuevo autor al formulario\n\n    const response = await axios.post(API_URL, formData, {\n      // Realizar una solicitud POST para agregar un nuevo autor\n      headers: {\n        'Content-Type': 'multipart/form-data' // Especificar el tipo de contenido como 'multipart/form-data' para el envío de archivos\n      }\n    });\n    return response.data; // Devolver los datos de la respuesta\n  } catch (error) {\n    console.error('Error al agregar autor:', error); // Manejar errores en caso de fallo\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getAutores","response","get","data","error","console","getAutorPorId","id","agregarAutor","nuevoAutor","imagen","formData","FormData","append","nombre","apellido","fechaNacimiento","post","headers"],"sources":["C:/Users/ventu/OneDrive/Escritorio/Desarollo Web Integral/Front/now-ui-dashboard-react-main/src/service/apiAutor.js"],"sourcesContent":["import axios from 'axios'; \r\n\r\nconst API_URL = 'https://localhost:7114/api/Autor'; // URL base de la API para interactuar con la entidad Autor\r\n\r\n// Función asincrónica para obtener la lista de autores\r\nexport const getAutores = async () => {\r\n  try {\r\n    const response = await axios.get(API_URL); // Realizar una solicitud GET para obtener la lista de autores\r\n    return response.data; // Devolver los datos de la respuesta\r\n  } catch (error) {\r\n    console.error('Error al obtener autores:', error); // Manejar errores en caso de fallo\r\n    throw error; \r\n  }\r\n};\r\n\r\n// Función asincrónica para obtener un autor por su ID\r\nexport const getAutorPorId = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/${id}`); // Realizar una solicitud GET para obtener un autor específico por su ID\r\n    return response.data; // Devolver los datos de la respuesta\r\n  } catch (error) {\r\n    console.error('Error al obtener autor por ID:', error); // Manejar errores en caso de fallo\r\n    throw error; \r\n  }\r\n};\r\n\r\n// Función asincrónica para agregar un nuevo autor\r\nexport const agregarAutor = async (nuevoAutor, imagen) => {\r\n  try {\r\n    const formData = new FormData(); // Crear un objeto FormData para enviar datos de formulario\r\n    formData.append('nombre', nuevoAutor.nombre); // Agregar el nombre del nuevo autor al formulario\r\n    formData.append('apellido', nuevoAutor.apellido); // Agregar el apellido del nuevo autor al formulario\r\n    formData.append('fechaNacimiento', nuevoAutor.fechaNacimiento); // Agregar la fecha de nacimiento del nuevo autor al formulario\r\n    formData.append('imagen', imagen); // Agregar la imagen del nuevo autor al formulario\r\n\r\n    const response = await axios.post(API_URL, formData, { // Realizar una solicitud POST para agregar un nuevo autor\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data' // Especificar el tipo de contenido como 'multipart/form-data' para el envío de archivos\r\n      }\r\n    });\r\n    return response.data; // Devolver los datos de la respuesta\r\n  } catch (error) {\r\n    console.error('Error al agregar autor:', error); // Manejar errores en caso de fallo\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC,CAAC,CAAC;;AAEpD;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC,CAAC,CAAC;IAC3C,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,aAAa,GAAG,MAAOC,EAAE,IAAK;EACzC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,IAAIQ,EAAE,EAAE,CAAC,CAAC,CAAC;IACtD,OAAON,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC,CAAC,CAAC;IACxD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,YAAY,GAAG,MAAAA,CAAOC,UAAU,EAAEC,MAAM,KAAK;EACxD,IAAI;IACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACjCD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEJ,UAAU,CAACK,MAAM,CAAC,CAAC,CAAC;IAC9CH,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEJ,UAAU,CAACM,QAAQ,CAAC,CAAC,CAAC;IAClDJ,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAEJ,UAAU,CAACO,eAAe,CAAC,CAAC,CAAC;IAChEL,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEH,MAAM,CAAC,CAAC,CAAC;;IAEnC,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACmB,IAAI,CAAClB,OAAO,EAAEY,QAAQ,EAAE;MAAE;MACrDO,OAAO,EAAE;QACP,cAAc,EAAE,qBAAqB,CAAC;MACxC;IACF,CAAC,CAAC;IACF,OAAOjB,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}