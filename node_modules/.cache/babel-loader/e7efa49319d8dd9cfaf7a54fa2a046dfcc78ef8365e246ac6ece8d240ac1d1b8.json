{"ast":null,"code":"import axios from 'axios';\nconst API_LIBRO_URL = 'https://localhost:7225/api/LibroMaterial';\nconst API_AUTOR_URL = 'https://localhost:7114/api/Autor';\nexport const getLibros = async () => {\n  try {\n    const responseLibros = await axios.get(API_LIBRO_URL);\n    const libros = responseLibros.data;\n    const autores = await getAutores();\n    const autoresDic = {};\n    autores.forEach(autor => {\n      autoresDic[autor.autorLibroGuid] = {\n        nombre: `${autor.nombre} ${autor.apellido}`\n      };\n    });\n    const librosConNombresDeAutores = libros.map(libro => {\n      const autor = autoresDic[libro.autorLibro] || {\n        nombre: 'Autor desconocido'\n      };\n      return {\n        ...libro,\n        autorNombre: autor.nombre\n      };\n    });\n    return librosConNombresDeAutores;\n  } catch (error) {\n    console.error('Error al obtener libros o autores:', error);\n    throw error;\n  }\n};\nexport const getLibroPorId = async guid => {\n  try {\n    const response = await axios.get(`${API_LIBRO_URL}/id?id=${guid}`, null, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const libro = response.data;\n    const autorResponse = await axios.get(`${API_AUTOR_URL}/${libro.autorLibro}`);\n    const autor = autorResponse.data;\n    const libroConAutor = {\n      ...libro,\n      autorNombre: `${autor.nombre} ${autor.apellido}`\n    };\n    return libroConAutor;\n  } catch (error) {\n    console.error('Error al obtener libro por GUID:', error);\n    throw error;\n  }\n};\nexport const agregarLibro = async (nuevoLibro, imagen) => {\n  try {\n    //const autores = await getAutores();\n\n    //const autorEncontrado = autores.find(autor => `${autor.nombre} ${autor.apellido}` === nuevoLibro.autor.nombre);\n\n    //if (!autorEncontrado) {\n    //throw new Error('No se encontró el autor especificado');\n    // }\n\n    const libroParaEnviar = new FormData();\n    libroParaEnviar.append('titulo', nuevoLibro.titulo);\n    libroParaEnviar.append('fechaPublicacion', nuevoLibro.fechaPublicacion);\n    libroParaEnviar.append('autorLibro', nuevoLibro.autorLibroGuid);\n    libroParaEnviar.append('precio', nuevoLibro.precio);\n    if (imagen) {\n      libroParaEnviar.append('imagen', imagen);\n    }\n    const response = await axios.post(API_LIBRO_URL, libroParaEnviar, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error al agregar libro:', error);\n    throw error;\n  }\n};\nexport const getAutores = async () => {\n  try {\n    const response = await axios.get(API_AUTOR_URL);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener autores:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_LIBRO_URL","API_AUTOR_URL","getLibros","responseLibros","get","libros","data","autores","getAutores","autoresDic","forEach","autor","autorLibroGuid","nombre","apellido","librosConNombresDeAutores","map","libro","autorLibro","autorNombre","error","console","getLibroPorId","guid","response","headers","autorResponse","libroConAutor","agregarLibro","nuevoLibro","imagen","libroParaEnviar","FormData","append","titulo","fechaPublicacion","precio","post"],"sources":["C:/Users/ventu/OneDrive/Escritorio/Desarollo Web Integral/Front/consumo-microservice-libreria/src/services/apiLibro.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_LIBRO_URL = 'https://localhost:7225/api/LibroMaterial';\r\nconst API_AUTOR_URL = 'https://localhost:7114/api/Autor';\r\n\r\nexport const getLibros = async () => {\r\n  try {\r\n    const responseLibros = await axios.get(API_LIBRO_URL);\r\n    const libros = responseLibros.data;\r\n\r\n    const autores = await getAutores();\r\n\r\n    const autoresDic = {};\r\n    autores.forEach(autor => {\r\n      autoresDic[autor.autorLibroGuid] = {\r\n        nombre: `${autor.nombre} ${autor.apellido}`,\r\n      };\r\n    });\r\n\r\n    const librosConNombresDeAutores = libros.map(libro => {\r\n      const autor = autoresDic[libro.autorLibro] || { nombre: 'Autor desconocido'};\r\n      return {\r\n        ...libro,\r\n        autorNombre: autor.nombre\r\n      };\r\n    });\r\n\r\n    return librosConNombresDeAutores;\r\n  } catch (error) {\r\n    console.error('Error al obtener libros o autores:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getLibroPorId = async (guid) => {\r\n  try {\r\n    const response = await axios.get(`${API_LIBRO_URL}/id?id=${guid}`, null, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    const libro = response.data;\r\n\r\n    const autorResponse = await axios.get(`${API_AUTOR_URL}/${libro.autorLibro}`);\r\n    const autor = autorResponse.data;\r\n\r\n    const libroConAutor = {\r\n      ...libro,\r\n      autorNombre: `${autor.nombre} ${autor.apellido}`\r\n    };\r\n\r\n    return libroConAutor;\r\n  } catch (error) {\r\n    console.error('Error al obtener libro por GUID:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const agregarLibro = async (nuevoLibro, imagen) => {\r\n  try {\r\n    //const autores = await getAutores();\r\n\r\n    //const autorEncontrado = autores.find(autor => `${autor.nombre} ${autor.apellido}` === nuevoLibro.autor.nombre);\r\n\r\n    //if (!autorEncontrado) {\r\n      //throw new Error('No se encontró el autor especificado');\r\n   // }\r\n\r\n    const libroParaEnviar = new FormData();\r\n    libroParaEnviar.append('titulo', nuevoLibro.titulo);\r\n    libroParaEnviar.append('fechaPublicacion', nuevoLibro.fechaPublicacion);\r\n    libroParaEnviar.append('autorLibro', nuevoLibro.autorLibroGuid);\r\n    libroParaEnviar.append('precio', nuevoLibro.precio);\r\n    if (imagen) {\r\n      libroParaEnviar.append('imagen', imagen);\r\n    }\r\n\r\n    const response = await axios.post(API_LIBRO_URL, libroParaEnviar, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al agregar libro:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAutores = async () => {\r\n  try {\r\n    const response = await axios.get(API_AUTOR_URL);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al obtener autores:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}