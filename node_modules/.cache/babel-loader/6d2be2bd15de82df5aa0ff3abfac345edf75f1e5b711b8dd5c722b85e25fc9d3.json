{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ventu\\\\OneDrive\\\\Escritorio\\\\Desarollo Web Integral\\\\Front\\\\consumo-microservice-libreria\\\\src\\\\services\\\\AuthProvider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    // Recupera el usuario del Local Storage si existe\n    const storedUser = localStorage.getItem('user');\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n  const login = (username, password) => {\n    // Aquí iría la lógica de autenticación\n    // Por simplicidad, asumimos que siempre es exitoso y que los roles vienen del backend o están predefinidos\n    const loggedUser = {\n      username,\n      role: username === 'author' ? 'author' : 'client'\n    };\n    setUser(loggedUser);\n    localStorage.setItem('user', JSON.stringify(loggedUser));\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"GxWVxGk7y9pg1lH0dfUMQ4W/4Ec=\");\n_c = AuthProvider;\nexport { AuthProvider, AuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","login","username","password","loggedUser","role","setItem","stringify","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ventu/OneDrive/Escritorio/Desarollo Web Integral/Front/consumo-microservice-libreria/src/services/AuthProvider.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(() => {\r\n    // Recupera el usuario del Local Storage si existe\r\n    const storedUser = localStorage.getItem('user');\r\n    return storedUser ? JSON.parse(storedUser) : null;\r\n  });\r\n\r\n  const login = (username, password) => {\r\n    // Aquí iría la lógica de autenticación\r\n    // Por simplicidad, asumimos que siempre es exitoso y que los roles vienen del backend o están predefinidos\r\n    const loggedUser = { username, role: username === 'author' ? 'author' : 'client' };\r\n    setUser(loggedUser);\r\n    localStorage.setItem('user', JSON.stringify(loggedUser));\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthProvider, AuthContext };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAEnC,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,MAAM;IACrC;IACA,MAAMS,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,IAAI;EACnD,CAAC,CAAC;EAEF,MAAMK,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IACpC;IACA;IACA,MAAMC,UAAU,GAAG;MAAEF,QAAQ;MAAEG,IAAI,EAAEH,QAAQ,KAAK,QAAQ,GAAG,QAAQ,GAAG;IAAS,CAAC;IAClFP,OAAO,CAACS,UAAU,CAAC;IACnBP,YAAY,CAACS,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACQ,SAAS,CAACH,UAAU,CAAC,CAAC;EAC1D,CAAC;EAED,MAAMI,MAAM,GAAGA,CAAA,KAAM;IACnBb,OAAO,CAAC,IAAI,CAAC;IACbE,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,oBACEpB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,IAAI;MAAEO,KAAK;MAAEO;IAAO,CAAE;IAAAhB,QAAA,EAClDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,EAAA,CAzBIF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AA2BlB,SAASA,YAAY,EAAED,WAAW;AAAG,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}