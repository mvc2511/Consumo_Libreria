{"ast":null,"code":"import axios from 'axios';\nconst API_LIBRO_URL = 'https://localhost:7225/api/LibroMaterial';\nconst API_AUTOR_URL = 'https://localhost:7114/api/Autor';\nexport const getLibros = async () => {\n  try {\n    const responseLibros = await axios.get(API_LIBRO_URL);\n    const libros = responseLibros.data;\n    const autores = await getAutores();\n    const autoresDic = {};\n    autores.forEach(autor => {\n      autoresDic[autor.autorLibroGuid] = {\n        nombre: `${autor.nombre} ${autor.apellido}`,\n        imagen: autor.imagen // Asegúrate de que la API devuelva la imagen en formato base64\n      };\n    });\n    const librosConNombresDeAutores = libros.map(libro => {\n      const autor = autoresDic[libro.autorLibro] || {\n        nombre: 'Autor desconocido',\n        imagen: null\n      };\n      return {\n        ...libro,\n        autorNombre: autor.nombre,\n        autorImagen: autor.imagen // Agregar la imagen al libro\n      };\n    });\n    return librosConNombresDeAutores;\n  } catch (error) {\n    console.error('Error al obtener libros o autores:', error);\n    throw error;\n  }\n};\nexport const getLibroPorId = async guid => {\n  try {\n    const response = await axios.post(`${API_LIBRO_URL}/id?id=${guid}`, null, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const libro = response.data;\n    const autorResponse = await axios.get(`${API_AUTOR_URL}/${libro.autorLibro}`);\n    const autor = autorResponse.data;\n    const libroConAutor = {\n      ...libro,\n      autorNombre: `${autor.nombre} ${autor.apellido}`,\n      autorImagen: autor.imagen // Asegúrate de que la API devuelva la imagen en formato base64\n    };\n    return libroConAutor;\n  } catch (error) {\n    console.error('Error al obtener libro por GUID:', error);\n    throw error;\n  }\n};\nexport const agregarLibro = async nuevoLibro => {\n  try {\n    const autores = await getAutores();\n    const autorEncontrado = autores.find(autor => autor.nombre === nuevoLibro.autor);\n    if (!autorEncontrado) {\n      throw new Error('No se encontró el autor especificado');\n    }\n    const libroParaEnviar = {\n      titulo: nuevoLibro.titulo,\n      fechaPublicacion: nuevoLibro.fechaPublicacion,\n      autorLibro: autorEncontrado.autorLibroGuid,\n      precio\n    };\n    const response = await axios.post(API_LIBRO_URL, libroParaEnviar, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error al agregar libro:', error);\n    throw error;\n  }\n};\nexport const getAutores = async () => {\n  try {\n    const response = await axios.get(API_AUTOR_URL);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener autores:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_LIBRO_URL","API_AUTOR_URL","getLibros","responseLibros","get","libros","data","autores","getAutores","autoresDic","forEach","autor","autorLibroGuid","nombre","apellido","imagen","librosConNombresDeAutores","map","libro","autorLibro","autorNombre","autorImagen","error","console","getLibroPorId","guid","response","post","headers","autorResponse","libroConAutor","agregarLibro","nuevoLibro","autorEncontrado","find","Error","libroParaEnviar","titulo","fechaPublicacion","precio"],"sources":["C:/Users/ventu/OneDrive/Escritorio/Desarollo Web Integral/Front/consumo-microservice-libreria/src/services/apiLibro.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_LIBRO_URL = 'https://localhost:7225/api/LibroMaterial';\r\nconst API_AUTOR_URL = 'https://localhost:7114/api/Autor';\r\n\r\nexport const getLibros = async () => {\r\n  try {\r\n    const responseLibros = await axios.get(API_LIBRO_URL);\r\n    const libros = responseLibros.data;\r\n\r\n    const autores = await getAutores();\r\n\r\n    const autoresDic = {};\r\n    autores.forEach(autor => {\r\n      autoresDic[autor.autorLibroGuid] = {\r\n        nombre: `${autor.nombre} ${autor.apellido}`,\r\n        imagen: autor.imagen // Asegúrate de que la API devuelva la imagen en formato base64\r\n      };\r\n    });\r\n\r\n    const librosConNombresDeAutores = libros.map(libro => {\r\n      const autor = autoresDic[libro.autorLibro] || { nombre: 'Autor desconocido', imagen: null };\r\n      return {\r\n        ...libro,\r\n        autorNombre: autor.nombre,\r\n        autorImagen: autor.imagen // Agregar la imagen al libro\r\n      };\r\n    });\r\n\r\n    return librosConNombresDeAutores;\r\n  } catch (error) {\r\n    console.error('Error al obtener libros o autores:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getLibroPorId = async (guid) => {\r\n  try {\r\n    const response = await axios.post(`${API_LIBRO_URL}/id?id=${guid}`, null, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    const libro = response.data;\r\n\r\n    const autorResponse = await axios.get(`${API_AUTOR_URL}/${libro.autorLibro}`);\r\n    const autor = autorResponse.data;\r\n\r\n    const libroConAutor = {\r\n      ...libro,\r\n      autorNombre: `${autor.nombre} ${autor.apellido}`,\r\n      autorImagen: autor.imagen // Asegúrate de que la API devuelva la imagen en formato base64\r\n    };\r\n\r\n    return libroConAutor;\r\n  } catch (error) {\r\n    console.error('Error al obtener libro por GUID:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const agregarLibro = async (nuevoLibro) => {\r\n  try {\r\n    const autores = await getAutores();\r\n\r\n    const autorEncontrado = autores.find(autor => autor.nombre === nuevoLibro.autor);\r\n\r\n    if (!autorEncontrado) {\r\n      throw new Error('No se encontró el autor especificado');\r\n    }\r\n\r\n    const libroParaEnviar = {\r\n      titulo: nuevoLibro.titulo,\r\n      fechaPublicacion: nuevoLibro.fechaPublicacion,\r\n      autorLibro: autorEncontrado.autorLibroGuid,\r\n      precio\r\n    };\r\n\r\n    const response = await axios.post(API_LIBRO_URL, libroParaEnviar, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al agregar libro:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAutores = async () => {\r\n  try {\r\n    const response = await axios.get(API_AUTOR_URL);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al obtener autores:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}