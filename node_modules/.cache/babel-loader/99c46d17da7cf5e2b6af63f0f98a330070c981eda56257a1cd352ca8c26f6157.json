{"ast":null,"code":"import axios from 'axios';\nconst API_LIBRO_URL = 'https://localhost:7225/api/LibroMaterial';\nconst API_AUTOR_URL = 'https://localhost:7114/api/Autor';\nexport const getLibros = async () => {\n  try {\n    const response = await axios.get(API_LIBRO_URL);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener libros:', error);\n    throw error;\n  }\n};\nexport const getLibroPorId = async id => {\n  try {\n    const response = await axios.get(`${API_LIBRO_URL}/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener libro por ID:', error);\n    throw error;\n  }\n};\nexport const agregarLibro = async nuevoLibro => {\n  try {\n    // Obtener la lista completa de autores\n    const autores = await getAutores();\n\n    // Encontrar el autor que coincida con el nombre seleccionado\n    const autorEncontrado = autores.find(autor => autor.nombre === nuevoLibro.autor);\n    if (!autorEncontrado) {\n      throw new Error('No se encontró el autor especificado');\n    }\n\n    // Construir el objeto a enviar con el GUID correcto del autor\n    const libroParaEnviar = {\n      titulo: nuevoLibro.titulo,\n      fechaPublicacion: nuevoLibro.fechaPublicacion,\n      autorLibroGuid: autorEncontrado.autorLibroGuid // Asegúrate de usar el nombre correcto del campo\n    };\n\n    // Enviar la solicitud POST con el objeto modificado\n    const response = await axios.post(API_LIBRO_URL, libroParaEnviar, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error al agregar libro:', error);\n    throw error;\n  }\n};\nexport const getAutores = async () => {\n  try {\n    const response = await axios.get(API_AUTOR_URL);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener autores:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_LIBRO_URL","API_AUTOR_URL","getLibros","response","get","data","error","console","getLibroPorId","id","agregarLibro","nuevoLibro","autores","getAutores","autorEncontrado","find","autor","nombre","Error","libroParaEnviar","titulo","fechaPublicacion","autorLibroGuid","post","headers"],"sources":["C:/Users/ventu/OneDrive/Escritorio/Desarollo Web Integral/Front/now-ui-dashboard-react-main/src/service/apiLibro.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_LIBRO_URL = 'https://localhost:7225/api/LibroMaterial';\r\nconst API_AUTOR_URL = 'https://localhost:7114/api/Autor';\r\n\r\nexport const getLibros = async () => {\r\n  try {\r\n    const response = await axios.get(API_LIBRO_URL);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al obtener libros:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getLibroPorId = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_LIBRO_URL}/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al obtener libro por ID:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const agregarLibro = async (nuevoLibro) => {\r\n  try {\r\n    // Obtener la lista completa de autores\r\n    const autores = await getAutores();\r\n\r\n    // Encontrar el autor que coincida con el nombre seleccionado\r\n    const autorEncontrado = autores.find(autor => autor.nombre === nuevoLibro.autor);\r\n\r\n    if (!autorEncontrado) {\r\n      throw new Error('No se encontró el autor especificado');\r\n    }\r\n\r\n    // Construir el objeto a enviar con el GUID correcto del autor\r\n    const libroParaEnviar = {\r\n      titulo: nuevoLibro.titulo,\r\n      fechaPublicacion: nuevoLibro.fechaPublicacion,\r\n      autorLibroGuid: autorEncontrado.autorLibroGuid  // Asegúrate de usar el nombre correcto del campo\r\n    };\r\n\r\n    // Enviar la solicitud POST con el objeto modificado\r\n    const response = await axios.post(API_LIBRO_URL, libroParaEnviar, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al agregar libro:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getAutores = async () => {\r\n  try {\r\n    const response = await axios.get(API_AUTOR_URL);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al obtener autores:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAG,0CAA0C;AAChE,MAAMC,aAAa,GAAG,kCAAkC;AAExD,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,aAAa,CAAC;IAC/C,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAOC,EAAE,IAAK;EACzC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,aAAa,IAAIS,EAAE,EAAE,CAAC;IAC1D,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,YAAY,GAAG,MAAOC,UAAU,IAAK;EAChD,IAAI;IACF;IACA,MAAMC,OAAO,GAAG,MAAMC,UAAU,CAAC,CAAC;;IAElC;IACA,MAAMC,eAAe,GAAGF,OAAO,CAACG,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACC,MAAM,KAAKN,UAAU,CAACK,KAAK,CAAC;IAEhF,IAAI,CAACF,eAAe,EAAE;MACpB,MAAM,IAAII,KAAK,CAAC,sCAAsC,CAAC;IACzD;;IAEA;IACA,MAAMC,eAAe,GAAG;MACtBC,MAAM,EAAET,UAAU,CAACS,MAAM;MACzBC,gBAAgB,EAAEV,UAAU,CAACU,gBAAgB;MAC7CC,cAAc,EAAER,eAAe,CAACQ,cAAc,CAAE;IAClD,CAAC;;IAED;IACA,MAAMnB,QAAQ,GAAG,MAAMJ,KAAK,CAACwB,IAAI,CAACvB,aAAa,EAAEmB,eAAe,EAAE;MAChEK,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOrB,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACH,aAAa,CAAC;IAC/C,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}