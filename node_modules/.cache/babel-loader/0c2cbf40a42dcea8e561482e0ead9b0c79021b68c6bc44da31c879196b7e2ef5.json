{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ventu\\\\OneDrive\\\\Escritorio\\\\Desarollo Web Integral\\\\Front\\\\now-ui-dashboard-react-main\\\\src\\\\views\\\\ListaAutores.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getAutores, getAutorPorId } from \"../service/apiAutor.js\"; // Importación de funciones del servicio API\nimport { Card, CardBody, CardHeader, CardTitle, Table, Row, Col } from \"reactstrap\"; // Importación de componentes de Reactstrap\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\"; // Importación de un componente personalizado\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RegularTables() {\n  _s();\n  const [autores, setAutores] = useState([]); // Estado para almacenar la lista de autores\n\n  useEffect(() => {\n    // Efecto de lado para cargar la lista de autores al cargar el componente\n    const fetchData = async () => {\n      try {\n        // Obtener la lista de autores usando la función getAutores del servicio API\n        const data = await getAutores();\n        setAutores(data); // Actualizar el estado con la lista de autores obtenida\n      } catch (error) {\n        console.error(\"Error al obtener autores:\", error); // Manejo de errores si falla la obtención de autores\n      }\n    };\n    fetchData(); // Llamar a la función fetchData al montar el componente\n  }, []);\n\n  // Función para obtener un autor por su ID\n  const obtenerAutorPorId = async id => {\n    try {\n      const autor = await getAutorPorId(id); // Obtener el autor por su ID usando la función getAutorPorId del servicio API\n      console.log(\"Autor por ID:\", autor); // Mostrar el autor encontrado en la consola\n    } catch (error) {\n      console.error(\"Error al obtener autor por ID:\", error); // Manejo de errores si falla la obtención del autor por ID\n    }\n  };\n\n  // Renderizado del componente\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n      size: \"sm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"title\",\n                children: \"Autores\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                responsive: true,\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"text-primary\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Nombre\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 50,\n                      columnNumber: 23\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Apellido\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 51,\n                      columnNumber: 23\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Fecha de Nacimiento\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 52,\n                      columnNumber: 23\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Imagen\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 23\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: autores.map((autor, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: autor.nombre\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 60,\n                      columnNumber: 25\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: autor.apellido\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 25\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: autor.fechaNacimiento\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 25\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: `data:image/jpeg;base64,${autor.imagen}`,\n                        alt: `Imagen de ${autor.nombre}`,\n                        style: {\n                          width: '100px',\n                          height: 'auto'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 65,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 25\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(RegularTables, \"B1ZCP09BnsfT/2LJ1Zyy34FHjtk=\");\n_c = RegularTables;\nexport default RegularTables;\nvar _c;\n$RefreshReg$(_c, \"RegularTables\");","map":{"version":3,"names":["React","useState","useEffect","getAutores","getAutorPorId","Card","CardBody","CardHeader","CardTitle","Table","Row","Col","PanelHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","RegularTables","_s","autores","setAutores","fetchData","data","error","console","obtenerAutorPorId","id","autor","log","children","size","fileName","_jsxFileName","lineNumber","columnNumber","className","xs","responsive","map","index","nombre","apellido","fechaNacimiento","src","imagen","alt","style","width","height","_c","$RefreshReg$"],"sources":["C:/Users/ventu/OneDrive/Escritorio/Desarollo Web Integral/Front/now-ui-dashboard-react-main/src/views/ListaAutores.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getAutores, getAutorPorId } from \"../service/apiAutor.js\"; // Importación de funciones del servicio API\nimport { Card, CardBody, CardHeader, CardTitle, Table, Row, Col } from \"reactstrap\"; // Importación de componentes de Reactstrap\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\"; // Importación de un componente personalizado\n\nfunction RegularTables() {\n  const [autores, setAutores] = useState([]); // Estado para almacenar la lista de autores\n\n  useEffect(() => {\n    // Efecto de lado para cargar la lista de autores al cargar el componente\n    const fetchData = async () => {\n      try {\n        // Obtener la lista de autores usando la función getAutores del servicio API\n        const data = await getAutores();\n        setAutores(data); // Actualizar el estado con la lista de autores obtenida\n      } catch (error) {\n        console.error(\"Error al obtener autores:\", error); // Manejo de errores si falla la obtención de autores\n      }\n    };\n\n    fetchData(); // Llamar a la función fetchData al montar el componente\n  }, []);\n\n  // Función para obtener un autor por su ID\n  const obtenerAutorPorId = async (id) => {\n    try {\n      const autor = await getAutorPorId(id); // Obtener el autor por su ID usando la función getAutorPorId del servicio API\n      console.log(\"Autor por ID:\", autor); // Mostrar el autor encontrado en la consola\n    } catch (error) {\n      console.error(\"Error al obtener autor por ID:\", error); // Manejo de errores si falla la obtención del autor por ID\n    }\n  };\n\n  // Renderizado del componente\n  return (\n    <>\n      <PanelHeader size=\"sm\" /> {/* Encabezado del panel */}\n      <div className=\"content\">\n        <Row>\n          <Col xs={12}>\n            <Card>\n              <CardHeader>\n                <h4 className=\"title\">Autores</h4>\n              </CardHeader>\n              <CardBody>\n                {/* Tabla para mostrar la lista de autores */}\n                <Table responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>Nombre</th> {/* Encabezado de columna para el nombre del autor */}\n                      <th>Apellido</th> {/* Encabezado de columna para el apellido del autor */}\n                      <th>Fecha de Nacimiento</th> {/* Encabezado de columna para la fecha de nacimiento del autor */}\n                      <th>Imagen</th> {/* Encabezado de columna para la imagen del autor */}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {/* Mapeo de la lista de autores para mostrar cada autor en una fila */}\n                    {autores.map((autor, index) => (\n                      <tr key={index}>\n                        <td>{autor.nombre}</td> {/* Celda con el nombre del autor */}\n                        <td>{autor.apellido}</td> {/* Celda con el apellido del autor */}\n                        <td>{autor.fechaNacimiento}</td> {/* Celda con la fecha de nacimiento del autor */}\n                        <td>\n                          {/* Celda con la imagen del autor */}\n                          <img src={`data:image/jpeg;base64,${autor.imagen}`} alt={`Imagen de ${autor.nombre}`} style={{ width: '100px', height: 'auto' }} />\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default RegularTables;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}