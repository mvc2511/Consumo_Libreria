{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ventu\\\\OneDrive\\\\Escritorio\\\\Desarollo Web Integral\\\\Front\\\\consumo-microservice-libreria\\\\src\\\\views\\\\ListaLibros.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getLibros } from \"../services/apiLibro\"; // Importa la función para obtener libros\nimport { Row, Col, Card, CardHeader, CardBody, Table } from \"reactstrap\";\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ListBooks() {\n  _s();\n  const [libros, setLibros] = useState([]);\n  useEffect(() => {\n    const fetchLibros = async () => {\n      try {\n        const librosData = await getLibros(); // Obtener la lista de libros\n        setLibros(librosData); // Actualizar el estado con la lista de libros obtenida\n      } catch (error) {\n        console.error(\"Error al obtener libros:\", error);\n      }\n    };\n    fetchLibros();\n  }, []);\n\n  // Función para formatear la fecha y mostrarla sin la hora\n  const formatDate = dateString => {\n    if (!dateString) return \"\"; // Manejar casos donde la fecha no está definida\n\n    const date = new Date(dateString); // Crear un objeto de fecha desde la cadena de fecha\n    const year = date.getFullYear(); // Obtener el año\n    const month = (1 + date.getMonth()).toString().padStart(2, \"0\"); // Obtener el mes y formatearlo\n    const day = date.getDate().toString().padStart(2, \"0\"); // Obtener el día y formatearlo\n\n    return `${day}/${month}/${year}`; // Formatear la fecha como día/mes/año\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PanelHeader, {\n      size: \"sm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"title\",\n                children: \"Libros\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                responsive: true,\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"text-primary\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"T\\xEDtulo\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 55,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Fecha de Publicaci\\xF3n\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Autor\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 57,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: libros.map((libro, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: libro.titulo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: formatDate(libro.fechaPublicacion)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 25\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: libro.autorNombre ? libro.autorNombre : 'Sin información de autores'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 25\n                    }, this), \" \"]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ListBooks, \"5N5NdkLS1uyFCt4zzRNbdhTROa0=\");\n_c = ListBooks;\nexport default ListBooks;\nvar _c;\n$RefreshReg$(_c, \"ListBooks\");","map":{"version":3,"names":["React","useState","useEffect","getLibros","Row","Col","Card","CardHeader","CardBody","Table","PanelHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","ListBooks","_s","libros","setLibros","fetchLibros","librosData","error","console","formatDate","dateString","date","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","children","size","fileName","_jsxFileName","lineNumber","columnNumber","className","xs","responsive","map","libro","index","titulo","fechaPublicacion","autorNombre","_c","$RefreshReg$"],"sources":["C:/Users/ventu/OneDrive/Escritorio/Desarollo Web Integral/Front/consumo-microservice-libreria/src/views/ListaLibros.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getLibros } from \"../services/apiLibro\"; // Importa la función para obtener libros\nimport {\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  Table,\n} from \"reactstrap\";\nimport PanelHeader from \"components/PanelHeader/PanelHeader.js\";\n\nfunction ListBooks() {\n  const [libros, setLibros] = useState([]);\n\n  useEffect(() => {\n    const fetchLibros = async () => {\n      try {\n        const librosData = await getLibros(); // Obtener la lista de libros\n        setLibros(librosData); // Actualizar el estado con la lista de libros obtenida\n      } catch (error) {\n        console.error(\"Error al obtener libros:\", error);\n      }\n    };\n\n    fetchLibros();\n  }, []);\n\n  // Función para formatear la fecha y mostrarla sin la hora\n  const formatDate = (dateString) => {\n    if (!dateString) return \"\"; // Manejar casos donde la fecha no está definida\n\n    const date = new Date(dateString); // Crear un objeto de fecha desde la cadena de fecha\n    const year = date.getFullYear(); // Obtener el año\n    const month = (1 + date.getMonth()).toString().padStart(2, \"0\"); // Obtener el mes y formatearlo\n    const day = date.getDate().toString().padStart(2, \"0\"); // Obtener el día y formatearlo\n\n    return `${day}/${month}/${year}`; // Formatear la fecha como día/mes/año\n  };\n\n  return (\n    <>\n      <PanelHeader size=\"sm\" />\n      <div className=\"content\">\n        <Row>\n          <Col xs={12}>\n            <Card>\n              <CardHeader>\n                <h4 className=\"title\">Libros</h4>\n              </CardHeader>\n              <CardBody>\n                <Table responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      <th>Título</th>\n                      <th>Fecha de Publicación</th>\n                      <th>Autor</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {libros.map((libro, index) => (\n                      <tr key={index}>\n                        <td>{libro.titulo}</td>\n                        <td>{formatDate(libro.fechaPublicacion)}</td> {/* Aplicar formatDate para mostrar solo la fecha */}\n                        <td>{libro.autorNombre ? libro.autorNombre : 'Sin información de autores'}</td> {/* Mostrar el nombre del autor */}\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default ListBooks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}